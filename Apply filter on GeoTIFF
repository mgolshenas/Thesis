import numpy as np
import rasterio
from rasterio.enums import Resampling
import os

# Import the 'fourier_zone_filter' function from 'fourier_zone_filter.py'
from fourier_zone_filter import fourier_concentric_zone_filter



    

# --- Main part: Load GeoTIFF, Apply Filters, Save Outputs ---

# Path to your input GeoTIFF
input_path = r"C:\Users\M\Downloads\GeogToWGS84GeoKey5.tif"

# Output folder to save results
output_folder = r"C:\Users\M\Downloads\Output"
os.makedirs(output_folder, exist_ok=True)

# List of zone codes (15 different combinations)
zone_codes = [
    '1000', '0100', '0010', '0001',
    '1100', '1010', '1001',
    '0110', '0101', '0011',
    '1110', '1101', '1011', '0111',
    '1111'  # All zones ON
]

# Open input GeoTIFF
with rasterio.open(input_path) as src:
    # Read the first band
    image = src.read(1)

    for zone_code in zone_codes:
        # Apply the Fourier filter
        filtered_img = fourier_concentric_zone_filter(image, zone_code)

        # Output filename
        output_path = os.path.join(output_folder, f"filtered_img_{zone_code}.tif")

        # Save the result as GeoTIFF
        profile = src.profile.copy()
        profile.update(
        dtype=rasterio.uint8,
        count=1
        )

        with rasterio.open(output_path, 'w', **profile) as dst:
            dst.write(filtered_img, 1)

            print(f"Saved: {output_path}")
      
